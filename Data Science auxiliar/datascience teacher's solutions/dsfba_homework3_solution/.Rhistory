# dummy prints for debug
print(res$cd)
print(gt)
print("-----")
results[i,1] = res$cd
if(!is.na(res$cd)){
correct = (res$cd == gt )
n_corr = n_corr + correct
}
print(paste("correct =", n_corr))
}
ncorrect = sum(results[,1]  == ce_gt )
print(paste("correct =", n_corr, "mean =", ncorrect))
corr = rep(0, n_pairs)
corr[ce_gt == cds] = 1
resDF = data.frame(Correct = corr, Eps = eps, Cds = cds,T = time)
write.table(resDF,file = paste0("../results/",method,"_",substr(ext,1,nchar(ext)-1),".tab"),row.names = F, quote = F, sep = "\t")
acc = ncorrect/100
acc
}
methods <- list("QCCD")
resultsAll <- lapply(methods, function (m) runSIM(m))
unlist(resultsAll)
rm(list = ls())
library(dplyr)
source("R/cd_utils.R")
path = "data/SIM_pairs/"
ext = "SIM-c/" # SIM/ ; SIM-ln/; SIM-G/;
pairmeta <- read.table(paste0(path, ext,"pairmeta.txt"),quote = "\"")
file.names <- dir(paste0(path,ext), pattern = ".txt")
ce_gt <- data.frame(pairmeta[, 2], pairmeta[, 5]) # the ground truth
ce_gt = ce_gt[,1]
n_pairs = 100
ce_gt[ce_gt == 2] = 0
runSIM <- function(method){
count_corr = 0
na = 0
pair_idx = rep("", n_pairs)
eps = rep(0, n_pairs)
cds = rep("--", n_pairs)
time = rep(0, n_pairs)
eps = rep(0, n_pairs)
Correct = rep(0, n_pairs)
n_corr = 0
results = matrix(0,nrow = n_pairs, ncol = 2)
method_to_run = switch(method,
"QCCD" = QCCD_new)
for (i in 1:100)
{
correct = 0
gt = ce_gt[i]
print(paste("Pair #",i))
t1 = Sys.time()
X <- read.table(paste0(path, ext, file.names[i]),quote = "\"")
plot(X)
res = method_to_run(X)
t2 = Sys.time()
elapsed = as.numeric(difftime(t2, t1), units = "secs")
pair_idx[i] = i
eps[i] = res$epsilon
cds[i] = res$cd
time[i] = elapsed
# dummy prints for debug
print(res$cd)
print(gt)
print("-----")
results[i,1] = res$cd
if(!is.na(res$cd)){
correct = (res$cd == gt )
n_corr = n_corr + correct
}
print(paste("correct =", n_corr))
}
ncorrect = sum(results[,1]  == ce_gt )
print(paste("correct =", n_corr, "mean =", ncorrect))
corr = rep(0, n_pairs)
corr[ce_gt == cds] = 1
resDF = data.frame(Correct = corr, Eps = eps, Cds = cds,T = time)
write.table(resDF,file = paste0("../results/",method,"_",substr(ext,1,nchar(ext)-1),".tab"),row.names = F, quote = F, sep = "\t")
acc = ncorrect/100
acc
}
methods <- list("QCCD")
resultsAll <- lapply(methods, function (m) runSIM(m))
unlist(resultsAll)
rm(list = ls())
library(dplyr)
source("R/cd_utils.R")
path = "data/SIM_pairs/"
ext = "SIM/" # SIM/ ; SIM-ln/; SIM-G/;
pairmeta <- read.table(paste0(path, ext,"pairmeta.txt"),quote = "\"")
file.names <- dir(paste0(path,ext), pattern = ".txt")
ce_gt <- data.frame(pairmeta[, 2], pairmeta[, 5]) # the ground truth
ce_gt = ce_gt[,1]
n_pairs = 100
ce_gt[ce_gt == 2] = 0
runSIM <- function(method){
count_corr = 0
na = 0
pair_idx = rep("", n_pairs)
eps = rep(0, n_pairs)
cds = rep("--", n_pairs)
time = rep(0, n_pairs)
eps = rep(0, n_pairs)
Correct = rep(0, n_pairs)
n_corr = 0
results = matrix(0,nrow = n_pairs, ncol = 2)
method_to_run = switch(method,
"QCCD" = QCCD_new)
for (i in 1:100)
{
correct = 0
gt = ce_gt[i]
print(paste("Pair #",i))
t1 = Sys.time()
X <- read.table(paste0(path, ext, file.names[i]),quote = "\"")
plot(X)
res = method_to_run(X)
t2 = Sys.time()
elapsed = as.numeric(difftime(t2, t1), units = "secs")
pair_idx[i] = i
eps[i] = res$epsilon
cds[i] = res$cd
time[i] = elapsed
# dummy prints for debug
print(res$cd)
print(gt)
print("-----")
results[i,1] = res$cd
if(!is.na(res$cd)){
correct = (res$cd == gt )
n_corr = n_corr + correct
}
print(paste("correct =", n_corr))
}
ncorrect = sum(results[,1]  == ce_gt )
print(paste("correct =", n_corr, "mean =", ncorrect))
corr = rep(0, n_pairs)
corr[ce_gt == cds] = 1
resDF = data.frame(Correct = corr, Eps = eps, Cds = cds,T = time)
write.table(resDF,file = paste0("../results/",method,"_",substr(ext,1,nchar(ext)-1),".tab"),row.names = F, quote = F, sep = "\t")
acc = ncorrect/100
acc
}
methods <- list("QCCD")
resultsAll <- lapply(methods, function (m) runSIM(m))
unlist(resultsAll)
# run this script from the R/ folder in this project
rm(list = ls())
library(dplyr)
source("R/cd_utils.R")
path = "data/SIM_pairs/"
ext = "SIM-ln/" # SIM/ ; SIM-ln/; SIM-G/;
pairmeta <- read.table(paste0(path, ext,"pairmeta.txt"),quote = "\"")
file.names <- dir(paste0(path,ext), pattern = ".txt")
ce_gt <- data.frame(pairmeta[, 2], pairmeta[, 5]) # the ground truth
ce_gt = ce_gt[,1]
n_pairs = 100
ce_gt[ce_gt == 2] = 0
runSIM <- function(method){
count_corr = 0
na = 0
pair_idx = rep("", n_pairs)
eps = rep(0, n_pairs)
cds = rep("--", n_pairs)
time = rep(0, n_pairs)
eps = rep(0, n_pairs)
Correct = rep(0, n_pairs)
n_corr = 0
results = matrix(0,nrow = n_pairs, ncol = 2)
method_to_run = switch(method,
"QCCD" = QCCD_new)
for (i in 1:100)
{
correct = 0
gt = ce_gt[i]
print(paste("Pair #",i))
t1 = Sys.time()
X <- read.table(paste0(path, ext, file.names[i]),quote = "\"")
plot(X)
res = method_to_run(X)
t2 = Sys.time()
elapsed = as.numeric(difftime(t2, t1), units = "secs")
pair_idx[i] = i
eps[i] = res$epsilon
cds[i] = res$cd
time[i] = elapsed
# dummy prints for debug
print(res$cd)
print(gt)
print("-----")
results[i,1] = res$cd
if(!is.na(res$cd)){
correct = (res$cd == gt )
n_corr = n_corr + correct
}
print(paste("correct =", n_corr))
}
ncorrect = sum(results[,1]  == ce_gt )
print(paste("correct =", n_corr, "mean =", ncorrect))
corr = rep(0, n_pairs)
corr[ce_gt == cds] = 1
resDF = data.frame(Correct = corr, Eps = eps, Cds = cds,T = time)
write.table(resDF,file = paste0("../results/",method,"_",substr(ext,1,nchar(ext)-1),".tab"),row.names = F, quote = F, sep = "\t")
acc = ncorrect/100
acc
}
methods <- list("QCCD")
resultsAll <- lapply(methods, function (m) runSIM(m))
unlist(resultsAll)
library(dplyr)
library(readr)
source("R/cd_utils.R")
n_pairs <- 100
n_size <- 300
set.seed(3)
path = "data/ANHNMN_pairs/"
ext = "HN/"
# load ground truth for pairs
pairs_gt <- read_csv(paste0(path, ext, "pairs_gt.txt"), col_names = FALSE)
pairs_gt <- pairs_gt$X1
runANM <- function(method){
method_to_run <- switch(method,
"QCCD" = QCCD_new)
pair_idx = rep("", n_pairs)
eps = rep(0, n_pairs)
cds = rep("--", n_pairs)
time = rep(0, n_pairs)
eps = rep(0, n_pairs)
Correct = rep(0, n_pairs)
n_corr = 0
results = matrix(0,nrow = n_pairs, ncol = 2)
for(i in 1:n_pairs){
t1 = Sys.time()
pair =  read.table(paste0(path, ext, "pair_",i,".txt"), as.is = TRUE, header = TRUE, sep = ",", row.names = 1)
plot(pair)
res = method_to_run(pair)
t2 = Sys.time()
elapsed = as.numeric(difftime(t2, t1), units = "secs")
pair_idx[i] = i
eps[i] = res$epsilon
cds[i] = res$cd
time[i] = elapsed
# dummy prints for debug
print(paste0("pair = ", i, ", correct = ", pairs_gt[i] == cds[i],
", accuracy = ", mean(pairs_gt[1:i] == cds[1:i])))
print("-----")
results[i,1] = res$cd
if(!is.na(res$cd)){
correct = (res$cd == pairs_gt[i] )
n_corr = n_corr + correct
}
ncorrect = sum(results[1:n_pairs,1]  == pairs_gt[1:n_pairs])
print(paste("correct =", n_corr, "mean =", ncorrect))
corr = rep(0, n_pairs)
corr[pairs_gt == cds] = 1
resDF = data.frame(Correct = corr, Eps = eps, Cds = cds,T = time)
write.table(resDF,file = paste0("results/",method,"_",substr(ext,1,nchar(ext)-1),".tab"),row.names = F, quote = F, sep = "\t")
acc = ncorrect/100
acc
}
methods <- list("QCCD")
resultsAll <- lapply(methods, function (m) runANM(m))
rm(list = ls())
library(dplyr)
library(readr)
source("R/cd_utils.R")
n_pairs <- 100
n_size <- 300
set.seed(3)
path = "data/ANHNMN_pairs/"
ext = "HN-s/"
# load ground truth for pairs
pairs_gt <- read_csv(paste0(path, ext, "pairs_gt.txt"), col_names = FALSE)
pairs_gt <- pairs_gt$X1
runANM <- function(method){
method_to_run <- switch(method,
"QCCD" = QCCD_new)
pair_idx = rep("", n_pairs)
eps = rep(0, n_pairs)
cds = rep("--", n_pairs)
time = rep(0, n_pairs)
eps = rep(0, n_pairs)
Correct = rep(0, n_pairs)
n_corr = 0
results = matrix(0,nrow = n_pairs, ncol = 2)
for(i in 1:n_pairs){
t1 = Sys.time()
pair =  read.table(paste0(path, ext, "pair_",i,".txt"), as.is = TRUE, header = TRUE, sep = ",", row.names = 1)
plot(pair)
res = method_to_run(pair)
t2 = Sys.time()
elapsed = as.numeric(difftime(t2, t1), units = "secs")
pair_idx[i] = i
eps[i] = res$epsilon
cds[i] = res$cd
time[i] = elapsed
# dummy prints for debug
print(paste0("pair = ", i, ", correct = ", pairs_gt[i] == cds[i],
", accuracy = ", mean(pairs_gt[1:i] == cds[1:i])))
print("-----")
results[i,1] = res$cd
if(!is.na(res$cd)){
correct = (res$cd == pairs_gt[i] )
n_corr = n_corr + correct
}
ncorrect = sum(results[1:n_pairs,1]  == pairs_gt[1:n_pairs])
print(paste("correct =", n_corr, "mean =", ncorrect))
corr = rep(0, n_pairs)
corr[pairs_gt == cds] = 1
resDF = data.frame(Correct = corr, Eps = eps, Cds = cds,T = time)
write.table(resDF,file = paste0("results/",method,"_",substr(ext,1,nchar(ext)-1),".tab"),row.names = F, quote = F, sep = "\t")
acc = ncorrect/100
acc
}
methods <- list("QCCD")
resultsAll <- lapply(methods, function (m) runANM(m))
setwd("/Users/admin/Library/Containers/com.apple.mail/Data/Library/Mail Downloads/0A443AEB-C0E9-473A-A865-6A2909FCF161/dsfba_homework3_skeleton_solution")
setwd("/Users/admin/Desktop/dsfba_homework3_skeleton_solution")
library(knitr)
library(tidyverse)
library(lubridate)
library(modelr)
library(broom)
library(ggrepel)
temperature_data <- read_csv("../data/temperature_data.csv")
theme_set(theme_light())
opts_chunk$set(fig.width = 8,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
fig.show = "hold",
message = FALSE)
month_levels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
## create year/month + filter data for 20/21 centuries
temperature_data <- temperature_data %>%
mutate(year = year(date),
month = factor(month(date, label = TRUE),
levels = month_levels,
ordered = FALSE)) %>%
filter(year >= 1900)
## remove countries without data (a bit ugly)
no_data <- temperature_data %>%
group_by(country) %>%
summarize(nodata = sum(!is.na(temperature)) == 0) %>%
filter(nodata == FALSE)
temperature_data <- temperature_data %>%
semi_join(no_data)
View(temperature_data)
country_region <- temperature_data %>%
select(region, country) %>%
unique
country_region %>%
group_by(region) %>%
summarize(`number of countries` = length(country)) %>%
kable(caption = "Repartition of countries per region")
country_region %>%
filter(region == "Other") %>%
select(country) %>%
head(n = 10) %>%
kable(caption = "First 10 countries in the `Other` region")
temperature_data %>%
filter(year == 2010,
month == "Mar") %>%
ggplot(aes(map_id = country)) +
geom_map(aes(fill = temperature), map = map_data("world")) +
expand_limits(x = c(-170, 170), y = c(-85, 85)) +
scale_fill_gradientn(colours = rev(heat.colors(40))) +
labs(title = "Worldwide temperature in March 2010",
x = "longitude",
y = "latitude",
fill = "Temperature")
temperature_data %>%
filter(year %in% c(1900, 2010),
month == "Mar") %>%
group_by(country) %>%
summarise(temp_diff = diff(range(temperature))) %>%
ggplot(aes(map_id = country)) +
geom_map(aes(fill = temp_diff), map = map_data("world")) +
expand_limits(x = c(-170, 170), y = c(-85, 85)) +
scale_fill_gradientn(colours = rev(heat.colors(40))) +
labs(title = "Difference in worlwide temperature between March 1900 and 2010",
x = "longitude",
y = "latitude",
fill = "Difference in temperature")
temperature_data %>%
filter(country == "Switzerland") %>%
ggplot(aes(date, temperature)) +
geom_line() +
ggtitle("Full data")
sw <- temperature_data %>% filter(country == "Switzerland")
sw_mod <- lm(temperature ~ month, data = sw)
sw %>%
add_predictions(sw_mod, var = "mean temperature") %>%
filter(year == 1900) %>%
ggplot(aes(month, `mean temperature`, group = 1)) +
geom_point() +
geom_line() +
ggtitle("Monthly pattern")
sw %>%
add_predictions(sw_mod, var = "mean temperature") %>%
ggplot(aes(month, `mean temperature`, group = 1)) +
geom_point() +
geom_line() +
ggtitle("Monthly pattern")
sw %>%
add_predictions(sw_mod, var = "mean temperature")
View(temperature_data)
temperature_data <- temperature_data %>%
mutate(year = year(date),
month = factor(month(date, label = TRUE),
levels = month_levels,
ordered = FALSE)) %>%
filter(year >= 1900)
temperature_data <- read_csv("../data/temperature_data.csv")
View(temperature_data)
no_data <- temperature_data %>%
group_by(country) %>%
summarize(nodata = sum(!is.na(temperature)) == 0) %>%
filter(nodata == FALSE)
getwd()
setwd("/Users/admin/Desktop/dsfba_homework3_skeleton_solution")
library(knitr)
library(tidyverse)
library(lubridate)
library(modelr)
library(broom)
library(ggrepel)
temperature_data <- read_csv("../data/temperature_data.csv")
theme_set(theme_light())
opts_chunk$set(fig.width = 8,
fig.asp = 0.618,
out.width = "70%",
fig.align = "center",
fig.show = "hold",
message = FALSE)
month_levels <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
## create year/month + filter data for 20/21 centuries
temperature_data <- temperature_data %>%
mutate(year = year(date),
month = factor(month(date, label = TRUE),
levels = month_levels,
ordered = FALSE)) %>%
filter(year >= 1900)
## remove countries without data (a bit ugly)
no_data <- temperature_data %>%
group_by(country) %>%
summarize(nodata = sum(!is.na(temperature)) == 0) %>%
filter(nodata == FALSE)
temperature_data <- temperature_data %>%
semi_join(no_data)
month_levels <- 1:12#c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
#  "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
## create year/month + filter data for 20/21 centuries
temperature_data <- temperature_data %>%
mutate(year = year(date),
month = factor(month(date, label = TRUE),
levels = month_levels,
ordered = FALSE)) %>%
filter(year >= 1900)
## remove countries without data (a bit ugly)
no_data <- temperature_data %>%
group_by(country) %>%
summarize(nodata = sum(!is.na(temperature)) == 0) %>%
filter(nodata == FALSE)
temperature_data <- temperature_data %>%
semi_join(no_data)
country_region <- temperature_data %>%
select(region, country) %>%
unique
country_region %>%
group_by(region) %>%
summarize(`number of countries` = length(country)) %>%
kable(caption = "Repartition of countries per region")
country_region %>%
filter(region == "Other") %>%
select(country) %>%
head(n = 10) %>%
kable(caption = "First 10 countries in the `Other` region")
temperature_data %>%
filter(year == 2010,
month == "Mar") %>%
ggplot(aes(map_id = country)) +
geom_map(aes(fill = temperature), map = map_data("world")) +
expand_limits(x = c(-170, 170), y = c(-85, 85)) +
scale_fill_gradientn(colours = rev(heat.colors(40))) +
labs(title = "Worldwide temperature in March 2010",
x = "longitude",
y = "latitude",
fill = "Temperature")
temperature_data %>%
filter(year %in% c(1900, 2010),
month == "Mar") %>%
group_by(country) %>%
summarise(temp_diff = diff(range(temperature))) %>%
ggplot(aes(map_id = country)) +
geom_map(aes(fill = temp_diff), map = map_data("world")) +
expand_limits(x = c(-170, 170), y = c(-85, 85)) +
scale_fill_gradientn(colours = rev(heat.colors(40))) +
labs(title = "Difference in worlwide temperature between March 1900 and 2010",
x = "longitude",
y = "latitude",
fill = "Difference in temperature")
temperature_data %>%
filter(country == "Switzerland") %>%
ggplot(aes(date, temperature)) +
geom_line() +
ggtitle("Full data")
sw <- temperature_data %>% filter(country == "Switzerland")
sw_mod <- lm(temperature ~ month, data = sw)
